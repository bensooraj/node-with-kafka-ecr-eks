version: '3.3'

services:
   # MySQL
   mysql-service:
     image: mysql:latest
     command: --default-authentication-plugin=mysql_native_password
     volumes:
       - db_data:/var/lib/mysql
       - ./mysql/initialization_scripts/:/docker-entrypoint-initdb.d/
     ports:
       - "3307:3306"
     restart: always
     environment:
       MYSQL_RANDOM_ROOT_PASSWORD: "yes"
       MYSQL_DATABASE: nodemsdb
       MYSQL_USER: bensooraj
       MYSQL_PASSWORD: M46&bp+8Vmbrh

   # Node.JS API And Kafka Producer
   nodejs-api-producer-service:
     depends_on:
       - mysql-service
     image: bensooraj/demo-node-producer:v1
     volumes:
       - ../image_uploads/:/app/image_uploads/
     ports:
       - "3000:3000"
     restart: always
     environment:
       AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
       AWS_S3_USER_ACCESS_KEY_ID: ${AWS_S3_USER_ACCESS_KEY_ID}
       AWS_S3_USER_SECRET_ACCESS_KEY: ${AWS_S3_USER_SECRET_ACCESS_KEY}
       IMAGE_RESIZE_SERVICE_HOST: ${IMAGE_RESIZE_SERVICE_HOST}
       IMAGE_RESIZE_SERVICE_PORT: ${IMAGE_RESIZE_SERVICE_PORT}
       MYSQL_SERVICE_USERNAME: ${MYSQL_SERVICE_USERNAME}
       MYSQL_SERVICE_PASSWORD: ${MYSQL_SERVICE_PASSWORD}
       KAFKA_BROKER_1: ${KAFKA_BROKER_1}
       KAFKA_BROKER_2: ${KAFKA_BROKER_2}
       KAFKA_BROKER_3: ${KAFKA_BROKER_3}
       KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
   
   # Node.JS API And Kafka Producer
   nodejs-consumer-service:
     depends_on:
       - mysql-service
     image: bensooraj/demo-node-consumer:v1
     volumes:
       - ../image_uploads/:/app/image_uploads/
    #  ports:
    #    - "3000:3000"
     restart: always
     environment:
       AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
       AWS_S3_USER_ACCESS_KEY_ID: ${AWS_S3_USER_ACCESS_KEY_ID}
       AWS_S3_USER_SECRET_ACCESS_KEY: ${AWS_S3_USER_SECRET_ACCESS_KEY}
       IMAGE_RESIZE_SERVICE_HOST: ${IMAGE_RESIZE_SERVICE_HOST}
       IMAGE_RESIZE_SERVICE_PORT: ${IMAGE_RESIZE_SERVICE_PORT}
       MYSQL_SERVICE_USERNAME: ${MYSQL_SERVICE_USERNAME}
       MYSQL_SERVICE_PASSWORD: ${MYSQL_SERVICE_PASSWORD}
       IMAGE_HOST_DOMAIN_NAME: ${IMAGE_HOST_DOMAIN_NAME}
       KAFKA_BROKER_1: ${KAFKA_BROKER_1}
       KAFKA_BROKER_2: ${KAFKA_BROKER_2}
       KAFKA_BROKER_3: ${KAFKA_BROKER_3}
       KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
       KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
   
   # Golang GRPC server for resizing and uploading the images
   golang-grpc-server:
     depends_on:
       - mysql-service
       - nodejs-api-producer-service
       - nodejs-consumer-service
     image: bensooraj/demo-go-grpc-image-resizer:v1
     volumes:
       - ../image_uploads/:/app/image_uploads/
     ports:
       - "50051:50051"
     restart: always
     environment:
       IMAGE_UPLOAD_DIRECTORY: /app/image_uploads/
       AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
       AWS_S3_USER_ACCESS_KEY_ID: ${AWS_S3_USER_ACCESS_KEY_ID}
       AWS_S3_USER_SECRET_ACCESS_KEY: ${AWS_S3_USER_SECRET_ACCESS_KEY}
       MYSQL_SERVICE_USERNAME: ${MYSQL_SERVICE_USERNAME}
       MYSQL_SERVICE_PASSWORD: ${MYSQL_SERVICE_PASSWORD}
       IMAGE_HOST_DOMAIN_NAME: ${IMAGE_HOST_DOMAIN_NAME}

volumes:
    db_data: {}